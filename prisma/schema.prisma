// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Enums are not supported in SQLite, using String with @db.Text

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  color       String?  @default("#3B82F6")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  tasks Task[]
  
  @@map("projects")
}

model Task {
  id          String     @id @default(cuid())
  title       String
  description String?
  status      String     @default("TODO")
  priority    String     @default("MEDIUM")
  dueAt       DateTime?
  completedAt DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  projectId String?
  project   Project? @relation(fields: [projectId], references: [id], onDelete: SetNull)
  
  labels TaskLabel[]
  comments Comment[]
  
  @@map("tasks")
}

model Label {
  id        String   @id @default(cuid())
  name      String   @unique
  color     String   @default("#6B7280")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  tasks TaskLabel[]
  
  @@map("labels")
}

model TaskLabel {
  taskId  String
  labelId String
  
  task  Task  @relation(fields: [taskId], references: [id], onDelete: Cascade)
  label Label @relation(fields: [labelId], references: [id], onDelete: Cascade)
  
  @@id([taskId, labelId])
  @@map("task_labels")
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  taskId String
  task   Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)
  
  @@map("comments")
}
